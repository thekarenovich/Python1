# Задача:
# Так как в Python операции с вещественными числами могут давать неожиданные результаты (в частности, 0.1 + 0.2 не будет в точности равняться 0.3), стоит задача с этим как-то справляться. 
# Требуется написать функцию eqv(a, b, c), которая принимает 3 числа. 
# Числа a и b складываются. 
# Затем эта сумма сравнивается с числом “с” с определенной степенью точности. 
# Точность равняется 0.01 % от большего из чисел a и b. 
# Функция вернет True, если выполняется равенство, иначе False.

# Решение:
# Мы уже выяснили, что в Python 0.1 + 0.2 != 0.3, тогда как по правилам математики обе части выражения идентичны. 
# Следовательно, половины нужно сравнивать с неким минимальным отклонением «е», величину которого в условии определили как 0.01 %. 
# Если части отличаются на меньшее значение, нежели «е», то они признаются равными.

def eqv(a, b, c):
    res = a + b
    e = 0.01 / 100  # Перевод процентов в долю
    tolerance = e * max(abs(a), abs(b))  # Находим значение отклонения
    return abs(res - c) <= tolerance  # Определяем, меньше ли разница, чем отклонение

print(eqv(0.12, 0.31, 0.43))  # True
print(eqv(0.1, 0.2, 0.3))  # True
print(eqv(0.1, 0.2, 0.4))  # False
print(eqv(-0.1, -0.2, -0.3))  # True
