# Решение:
# Анна решила представить некую таблицу с заглавными и строчными буквами русского алфавита в красивом формате. 
# Об этом ее попросили англоязычные друзья из социальных сетей.

# Недолго думая девушка создала скрипт, который выполнял подобную операцию. 
# Результат работы программы продемонстрирован ниже. 
# Сможете повторить (в строках с галочками - их 27 штук, чтобы вам не пришлось долго считать)? Для идентичности результатов примените любой моноширинный шрифт (в котором все символы имеют одинаковую ширину).
 
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^
# |  А а  ||  К к  ||  Х х  |
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^
# |  Б б  ||  Л л  ||  Ц ц  |
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^
# |  В в  ||  М м  ||  Ч ч  |
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^
# |  Г г  ||  Н н  ||  Ш ш  |
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^
# |  Д д  ||  О о  ||  Щ щ  |
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^
# |  Е е  ||  П п  ||  Ъ ъ  |
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^
# |  Ё ё  ||  Р р  ||  Ы ы  |
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^
# |  Ж ж  ||  С с  ||  Ь ь  |
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^
# |  З з  ||  Т т  ||  Э э  |
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^
# |  И и  ||  У у  ||  Ю ю  |
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^
# |  Й й  ||  Ф ф  ||  Я я  |
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^


# Решение:
# В идеале требуется провести минимум «издевательств» над входящими данными (т.е. над алфавитом). 
# В нашем случае мы просто записали все буквы русского алфавита в строку.
# Также, в задаче требовалось понять алгоритм разбиения знаков на 3 столбца.

rus_lower = 'абвгдеёжзийклмнопрстуфхцчшщъыьэюя'
for position in range(11):
    print('^' * 27)
    for letter in rus_lower:
        if rus_lower.index(letter) % 11 == position:
            print('| ', letter.upper(), letter, ' |', end='')
    print()
print('^' * 27)
