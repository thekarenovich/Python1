# Задача: 
# Валентина прогуляла лекцию по математике. 
# Преподаватель решил подшутить над нерадивой студенткой и 
# попросил ее на практическом занятии перечислить все положительные делители некоторых целых чисел. 
# Для несложных примеров студентка быстро нашла решения (для числа 6 это: 1, 2, 3, 6; а для числа 16 это: 1, 2, 4, 8, 16), но этим все не закончилось. 
# На домашнее задание ей дали варианты посложнее: 23436, 190187200, 380457890232.

# Решить такое вручную, как вы понимаете, практически нереально. 
# Вот Валентина и обратилась к вам за помощью. 
# Помогите ей (при помощи функции all_divisors(number)). 
# Постарайтесь найти самое оптимальное решение. 
# Результат представьте в виде списка (не забудьте отсортировать по возрастанию).


# Решение:
# Для решения задания важно не просто подойти к делу в лоб. 
# Требуется оптимизация алгоритма для минимизации времени расчета.
# Первое, что приходит на ум – простой перебор всех вариантов. 
# Каким бы мощным не был ваш ПК, число в 380 млрд он будет долго итерировать.
# Вторая идея – перебрать все числа только до половины искомого числа (и добавить после этого еще и само число в список). 
# Но и этот вариант не особо сокращает время.
# Самый оптимальный вариант – перебрать числа до квадратного корня из искомого. 
# Чтобы пояснить решение, приведем пример попроще. 
# Возьмем число 100. Оно делится на 1 и на само себя. 
# Сразу заносим в список очевидный набор. 
# Затем начинаем с двойки и идем по всем возможным числам. 
# 100 делится на 2, его заносим в список, но результат (т.е. 100 : 2 = 50) также является делителем числа 100. 
# Его тоже сразу добавляем. 
# Аналогично поступаем далее, находя пары делителей: (4, 25), (5, 20), (10, 10). Итак, мы дошли до корня квадратного из 100. 
# Число 10 повторяется, поэтому следует его добавить лишь 1 раз. Есть ли смысл идти дальше в поиске делителей? 
# Ведь далее получим такие делители: 20, 25, 50 и 100, но мы их уже занесли в список. 
# Получается, проверка делителей до корня квадратного из любого положительного числа вполне достаточна.

def all_divisors(number):
    lst = [1, number]
    for i in range(2, 1 + int(number ** 0.5)):
        if number % i == 0:
            lst.extend({number // i, i})
    return sorted(lst)
 
print(all_divisors(23_436))
print(all_divisors(190_187_200))
print(all_divisors(380_457_890_232))

# [1, 2, 3, 4, 6, 7, 9, 12, 14, 18, 21, 27, 28, 31, 36, 42, 54, 62, 63, 84, 93, 108, 124, 126, 186, 189, 217, 252, 279, 372, 378, 434, 558, 651, 756, 837, 868, 1116, 1302, 1674, 1953, 2604, 3348, 3906, 5859, 7812, 11718, 23436]
# [1, 2, 4, 5, 7, 8, 10, 14, 16, 20, 25, 28, 32, 35, 40, 50, 56, 64, 70, 80, 100, 112, 140, 160, 175, 200, 224, 280, 320, 350, 400, 448, 560, 700, 800, 1120, 1400, 1600, 2240, 2800, 5600, 11200, 16981, 33962, 67924, 84905, 118867, 135848, 169810, 237734, 271696, 339620, 424525, 475468, 543392, 594335, 679240, 849050, 950936, 1086784, 1188670, 1358480, 1698100, 1901872, 2377340, 2716960, 2971675, 3396200, 3803744, 4754680, 5433920, 5943350, 6792400, 7607488, 9509360, 11886700, 13584800, 19018720, 23773400, 27169600, 38037440, 47546800, 95093600, 190187200]
# [1, 2, 3, 4, 6, 7, 8, 12, 14, 17, 21, 24, 28, 34, 42, 51, 56, 68, 84, 102, 119, 136, 168, 204, 238, 289, 357, 408, 476, 578, 714, 867, 952, 1156, 1428, 1734, 2023, 2312, 2856, 3468, 4046, 6069, 6936, 8092, 12138, 16184, 24276, 48552, 7836091, 15672182, 23508273, 31344364, 47016546, 54852637, 62688728, 94033092, 109705274, 133213547, 164557911, 188066184, 219410548, 266427094, 329115822, 399640641, 438821096, 532854188, 658231644, 799281282, 932494829, 1065708376, 1316463288, 1598562564, 1864989658, 2264630299, 2797484487, 3197125128, 3729979316, 4529260598, 5594968974, 6793890897, 7459958632, 9058521196, 11189937948, 13587781794, 15852412093, 18117042392, 22379875896, 27175563588, 31704824186, 47557236279, 54351127176, 63409648372, 95114472558, 126819296744, 190228945116, 380457890232]
