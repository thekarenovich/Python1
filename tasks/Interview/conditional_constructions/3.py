# Задача:
# Анатолию в последний месяц удача улыбалась очень плохо. 
# У него 3 раза взломали пароль. 
# Вот он и задумался над тем, что неправильно подходит к вопросу составления паролей.
# Чтобы не напрягаться больше и опять не попасть впросак, молодой человек решил написать функцию на Python, которая будет проверять его пароль на надежность.
# Требования к паролю у Анатолия следующие (он внимательно изучил рекомендации знатоков):
# 1) Длина – 8 символов (если меньше – то проще взломать, а если длиннее – то сложно запомнить)
# 2) В пароле должны быть заглавные буквы, строчные символы, числа и специальные знаки (из перечня «*-#»; другие спецсимволы недопустимы, так как Анатолий их не может запомнить).
# Помогите парню составить функцию check_pass (pswd), которая проверит пароль на соответствие требованиям. 
# В случае верного пароля выведется на печать «Пароль идеален», а в остальных случаях будут перечислены все ошибки, которые Анатолий допустил (для представления перечня ошибок заведите переменную err в виде словаря).


# Решение:
# – в переменную err вносим все возможные ошибки и их значения,
# – итерируемся по паролю, в случае обнаружения требуемого символа в нем, удаляем соответствующую ошибку из словаря,
# – для выявления непредусмотренных символов создадим копию пароля и будем заменять все верные буквы и знаки на каждой итерации цикла на пустую строку; если в конце строка с паролем будет не пустой, то это свидетельство применения неверного символа в пароле,
# - если после всех операций словарь с ошибками станет пустым, то пароль идеален, в противном случае перечисляем все ошибки.

import string


def check_pass(pwd):

    err = {
    'length': 'Длина пароля не равна 8 символам',
    'upper': 'Отсутствуют заглавные буквы',
    'lower': 'Нет строчных букв в пароле',
    'digits': 'Нет цифр в пароле',
    'spec': 'Отсутствуют спецсимволы в пароле',
    'bad_symbols': 'В пароле использованы непредусмотренные символы'
    }

    if len(pwd) == 8:
        err.pop('length')

    if pwd.lower() != pwd:
        err.pop('upper')

    if pwd.upper() != pwd:
        err.pop('lower')

    if any(map(str.isdigit, pwd)):
        err.pop('digits')

    if ('*' in pwd) or ('-' in pwd) or ('#' in pwd):
        err.pop('spec')

    allowed_sym = string.ascii_uppercase + string.ascii_lowercase + string.digits + '*-#'

    if (set(pwd) - set(allowed_sym)) == set():
        err.pop('bad_symbols')

    if len(err) == 0:
        print('Пароль идеален')
    else:
        print(*err.values(), sep='; ')


# Тесты
check_pass('8Yy#*rrT')
check_pass('@#@@u')
check_pass('Tr56#2@@')
check_pass('qwerty11')
check_pass('11qweQ-s')
